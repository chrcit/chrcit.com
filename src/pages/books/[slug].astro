---
import { getCollection } from "astro:content";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
} from "astro";
import { Image } from "astro:assets";
import RootLayout from "../../layouts/RootLayout.astro";

export const getStaticPaths = (async () => {
  const articles = await getCollection("books");

  return articles.map((entry) => {
    return {
      params: { slug: entry.slug },
      props: { entry },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props as Props;
const { Content, headings } = await entry.render();
---

<RootLayout
  activeTab="/books"
  title={entry.data.title}
  description={entry.data.description}
>
  <main
    id="content"
    class="w-full w-5xl xl:w-6xl lg:h-full lg:flex lg:items-center lg:justify-center mx-auto px-5 py-10"
  >
    <header
      class="flex sticky top-10 left-0 flex-col md:flex-row items-center py-10 gap-10"
    >
      <Image
        src={entry.data.cover}
        width={300}
        class="h-auto w-full max-w-[300px]"
        densities={[1, 2, 3]}
        transition:name={`book-${entry.id}-cover`}
        alt={`Book cover of ${entry.data.title}`}
      />
      <div class="prose prose-lg">
        <h1 class="text-4xl !mb-1 lg:text-5xl xl:text-6xl font-serif">
          {entry.data.title}
        </h1>
        <p>
          <strong>Author(s):</strong>
          {entry.data.author}
          <br />
          <strong>Release:</strong>
          {entry.data.year}
          <br />
          <strong>Rating:</strong>
          {entry.data.rating}/10
        </p>
        <p>{entry.data.description}</p>

        <a
          class="text-xl"
          target="_blank"
          rel="noreferrer noopener"
          href={entry.data.url}>Link to book</a
        >
      </div>
    </header>
  </main>
</RootLayout>
