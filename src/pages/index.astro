---
import { Image } from "astro:assets";
import Particles from "astro-particles";
import type { ISourceOptions } from "tsparticles-engine";
import { socials } from "../data/socials";
import BaseLayout from "../layouts/BaseLayout.astro";
import SocialLinks from "../components/SocialLinks.astro";

import ProfileImage from "../images/cut-out.png";

const options: ISourceOptions = {
  background: {
    color: "#fff",
  },
  fullScreen: {
    zIndex: -1,
  },
  particles: {
    number: {
      value: 40,
      density: {
        enable: true,
        value_area: 400,
      },
    },
    color: {
      value: "#8B1717",
    },
    shape: {
      type: "circle",
      stroke: {
        width: 0,
        color: "#000000",
      },
      polygon: {
        nb_sides: 1,
      },
      image: {
        src: "img/github.svg",
        width: 100,
        height: 100,
      },
    },
    opacity: {
      value: 1,
      random: true,
      anim: {
        enable: true,
        speed: 1,
        opacity_min: 0.1,
        sync: false,
      },
    },
    size: {
      value: 5,
      random: true,
      anim: {
        enable: false,
        speed: 40,
        size_min: 0.1,
        sync: false,
      },
    },
    line_linked: {
      enable: true,
      distance: 100,
      color: "#333",
      opacity: 0.2,
      width: 1,
    },
    move: {
      enable: true,
      speed: 3,
      direction: "none",
      random: false,
      straight: false,
      out_mode: "out",
      attract: {
        enable: true,
        rotateX: 600,
        rotateY: 1200,
      },
    },
  },
  interactivity: {
    detect_on: "canvas",
    events: {
      onhover: {
        enable: true,
        mode: "grab",
      },
      onclick: {
        enable: true,
        mode: "push",
      },
      resize: true,
    },
    modes: {
      grab: {
        distance: 100,
        line_linked: {
          opacity: 0.7,
        },
      },
      bubble: {
        distance: 400,
        size: 10,
        duration: 2,
        opacity: 8,
        speed: 3,
      },
      repulse: {
        distance: 30,
      },
      push: {
        particles_nb: 5,
      },
      remove: {
        particles_nb: 2,
      },
    },
  },
  retina_detect: true,
};
---

<BaseLayout title="chrcit.com">
  <div
    class="flex-col md:flex-row backdrop-blur-sm flex gap-10 xl:gap-16 items-center bg-white/70 mx-auto px-10 py-20 max-w-4xl xl:max-w-6xl -translate-y-1/2 fixed top-1/2 left-1/2 -translate-x-1/2 w-full overflow-auto max-h-[100dvh]"
  >
    <Image
      class="mx-auto w-full max-w-[300px] sm:w-3/4 md:w-3/4 lg:w-auto md:max-w-full"
      transition:name="profile-image"
      style={{
        // clipPath: "polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%)",
      }}
      densities={[1, 2, 3]}
      width={400}
      src={ProfileImage}
      alt="Image of Christian Cito, a 26 year old white man. I'm wearing a loose blue shirt and am looking to the side."
    />
    <article class="prose xl:prose-lg">
      <h1 class="font-bold !mb-2">Hi, I'm Christian.</h1>

      <h2 class="!mt-0">I create things for the internet.</h2>

      <p>
        I'm a product engineer and in the last 11 years I've worked on
        everything from basic websites to apps used by hundreds of thousands of
        people per day.
      </p>
      <p>
        Check out my <a href="/articles/2023-year-in-review"
          >2023 year in review</a
        >, some <a href="/projects">recent projects</a> and my <a href="/books"
          >favorite books</a
        >.
      </p>

      <p class="font-bold not-prose">
        Find me on:
        <SocialLinks size="20" />
      </p>
    </article>
  </div>

  <Particles
    class="w-full h-full fixed inset-0"
    id="tsparticles"
    options={options}
    init="particlesInit"
  />

  <script>
    import {
      type Container,
      type Engine,
      tsParticles,
    } from "tsparticles-engine";
    import { loadFull } from "tsparticles";

    // the function name is the parameter passed to the init attribute
    // required
    // add the function to window is mandatory, it will be searched there
    window.particlesInit = async function (engine: Engine) {
      console.log("particlesInit callback");
      await loadFull(engine);
    };

    // the function name is the parameter passed to the loaded attribute
    // optional
    // add the function to window is mandatory, it will be searched there
    window.particlesLoaded = function (container: Container) {
      console.log("particlesLoaded callback");
    };
  </script>

  <style>
    #ts-particles {
      position: fixed;
      width: 100%;
      height: 100%;
      z-index: -1;
    }
  </style>
</BaseLayout>
