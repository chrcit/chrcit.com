---
import type { MarkdownHeading } from "astro";
import RootLayout from "./RootLayout.astro";
import TableOfContents from "../components/TableOfContents.astro";
import { Image } from "astro:assets";
import clsx from "clsx";
import type { ActiveTabType } from "../components/Header.astro";

interface Props {
  id: string;
  title: string;
  headings?: MarkdownHeading[];
  activeTab: ActiveTabType;
  type: "article" | "project";
  image?: {
    src?: string;
    width?: number;
    height?: number;
    format?: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif";
  }; // TODO: extract to a type or find astro type
}

const { id, title, image, type, headings, activeTab } = Astro.props;
---

<RootLayout activeTab={activeTab} title={title}>
  <main id="content" class="w-full max-w-5xl pr-5 py-10">
    <article class="flex flex-col px-5 md:px-0">
      {
        image && (
          <Image
            transition:animate="none"
            densities={[1, 2, 3]}
            width={300}
            class="w-full sticky top-10 left-0 lg:max-w-3xl xl:max-w-5xl  z-10"
            transition:name={`${type}-${id}-image`}
            src={image}
            width={300}
            alt={``}
          />
        )
      }
      <div class={clsx("bg-white relative z-20")}>
        <h1
          id={`${type}-title`}
          class="bg-white/80 font-serif transition-all data-[scrolled=true]:text-3xl backdrop-blur-sm block py-5 z-10 sticky top-0 text-5xl"
          transition:name={`${type}-${id}-title`}
        >
          {title}
        </h1>
        <section
          class="w-full flex justify-between flex-row md:gap-14 lg:gap-20 xl:gap-28"
        >
          <div class="prose flex-grow break-all">
            <slot />
          </div>
          {
            headings && (
              <aside class="sticky pt-[6em] hidden lg:block top-5 md:w-[250px] lg:w-[300px] text-sm max-h-[100dvh] overflow-auto scroll-m-4">
                <TableOfContents headings={headings} />
              </aside>
            )
          }
        </section>
      </div>
    </article>

    <script>
      window.addEventListener("scroll", (e) => {
        const title = document.getElementById(`${type}-title`);

        if (title) {
          const titleRect = title.getBoundingClientRect();
          const delta = 600;
          const passedTop = window.scrollY > delta;

          if (passedTop) {
            title.setAttribute("data-scrolled", "true");
          } else {
            title.setAttribute("data-scrolled", "false");
          }
        }
      });
    </script>
  </main>
</RootLayout>
